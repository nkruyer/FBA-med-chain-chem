%Script for calculating theoretical yields on medium chain fatty acid
%(MCFA) derived compounds using COBRA Toolbox for Matlab. Focuses on C8
%compounds

%Updated Nick Kruyer 8/31/17

%load E. coli model - iAF1260b (Feist et al - 2010)
model_ecoli = readCbModel('iAF1260b');

%change glucose uptake rate so it is standard across all models. Also fix
%the O2 uptake rate. 
gluc_up = -10;
model_ecoli = changeRxnBounds(model_ecoli,{'EX_glc__D_e' 'EX_o2_e'},[gluc_up -15],'l');

%Add reverse Beta-oxidation to the model. We will assume that using this
%engineered pathway will lead to the highest theoretical yield for each
%desired compound. Also allows for standaradization of theoretical yields
%for comparison across compounds. Reversal based on Clomburg et al - 2015

model_revB = addRevBeta(model_ecoli);

%Add desired reactions to model with reverse beta oxidation added. For
%non-C8 compounds, addition of the the reverse beta oxidation pathway has
%been included in the individual script in order to include the
%thioesterase which gives the desired chain length. 

%C8 - MCFA
model_MCFA = addMCFA(model_revB);
%C8 - omega-hydroxy-MCFA: 
model_wOH = addwOHMCFA(model_revB);
%C8 - diacid
model_DiA = addDiacid(model_revB);
%C11 - alpha-olefin
model_OLE = addOLE(model_ecoli);
%C8 - FAEE
model_FAEE = addFAEE(model_revB);
%C8 - aldehyde
model_ALD = addALD(model_revB);
%C8 - alcohol
model_OL = addOL(model_revB);
%C8 - unsaturated acid
model_UNSAT = addUNSAT(model_revB);
%C7-Alkane
model_ALK = addALK(model_revB);
%C11-Ketone
model_KET = addKET(model_ecoli);

%Change the objective function of the model to optimize for production of
%the desired compound. Assume that we want to optimize excreted product. 

%C8-MCFA
model_MCFA = changeObjective(model_MCFA,'EX_octa_e');
%C8-wOH-MCFA
model_wOH = changeObjective(model_wOH,'EX_octaOH[e]');
%C8-diacid
model_DiA = changeObjective(model_DiA,'EX_octaDiCOOH[e]');
%C11-a-olefin
model_OLE = changeObjective(model_OLE,'EX_1und[e]');
%C8-FAEE
model_FAEE = changeObjective(model_FAEE,'EX_octaEE[e]');
%C8-ALD
model_ALD = changeObjective(model_ALD,'EX_octaALD[e]');
%C8-OL
model_OL = changeObjective(model_OL,'EX_octaOL[e]');
%C8-UNSAT
model_UNSAT = changeObjective(model_UNSAT,'EX_octeFA[e]');
%C7-Alkane
model_ALK = changeObjective(model_ALK,'EX_hep[e]');
%C11-Ketone
model_KET = changeObjective(model_KET,'EX_2unnone[e]');

%Solve the model using COBRA solver
solution_MCFA = optimizeCbModel(model_MCFA);
solution_wOH = optimizeCbModel(model_wOH);
solution_DiA = optimizeCbModel(model_DiA);
solution_OLE = optimizeCbModel(model_OLE);
solution_FAEE = optimizeCbModel(model_FAEE);
solution_ALD = optimizeCbModel(model_ALD);
solution_OL = optimizeCbModel(model_OL);
solution_UNSAT = optimizeCbModel(model_UNSAT);
solution_ALK = optimizeCbModel(model_ALK);
solution_KET = optimizeCbModel(model_KET);

%Extract the flux through the excretion pathway from the solution structure
%generated by the optimizeCbModel function
solutions = [solution_MCFA.f; 
             solution_wOH.f;
             solution_DiA.f;
             solution_OLE.f;
             solution_FAEE.f;
             solution_ALD.f;
             solution_OL.f;
             solution_UNSAT.f;
             solution_ALK.f;
             solution_KET.f];